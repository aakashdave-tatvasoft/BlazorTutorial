// <auto-generated />
using System;
using EmployeeManagement_Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeeManagementModel.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240703094827_AddDepartmentForeignKey")]
    partial class AddDepartmentForeignKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement_Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "It"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Networking"
                        });
                });

            modelBuilder.Entity("EmployeeManagement_Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BirthDate = new DateOnly(2024, 4, 7),
                            DepartmentId = 1,
                            Email = "John@gmail.com",
                            Firstname = "John",
                            Gender = 0,
                            Lastname = "Doe",
                            PhotoPath = ""
                        },
                        new
                        {
                            EmployeeId = 2,
                            BirthDate = new DateOnly(2024, 5, 7),
                            DepartmentId = 2,
                            Email = "Jane@gmail.com",
                            Firstname = "Jane",
                            Gender = 0,
                            Lastname = "Smith",
                            PhotoPath = ""
                        },
                        new
                        {
                            EmployeeId = 3,
                            BirthDate = new DateOnly(2023, 4, 3),
                            DepartmentId = 3,
                            Email = "Michael@gmail.com",
                            Firstname = "Michael",
                            Gender = 2,
                            Lastname = "Johnson",
                            PhotoPath = ""
                        },
                        new
                        {
                            EmployeeId = 4,
                            BirthDate = new DateOnly(2023, 4, 8),
                            DepartmentId = 4,
                            Email = "Emily@gmail.com",
                            Firstname = "Emily",
                            Gender = 1,
                            Lastname = "Williams",
                            PhotoPath = ""
                        });
                });

            modelBuilder.Entity("EmployeeManagement_Model.Employee", b =>
                {
                    b.HasOne("EmployeeManagement_Model.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeManagement_Model.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
